/* SimplicialComplex K1, K2
Vertex i in K1 -- gets compiled away into a given instance 
Vertex j in K2

SimplicialSet S 
s.t. S Subset K1
S := Star(i)

SimplicialComplex A
A := Closure(S) */

------------------------

/* SimplicialComplex K1
SimplicialComplex K2
Vertex i
InVS(i, K1)
Vertex j
InVS(j, K2)
SimplicialSet S
Subset(S, K1)
S := Star(i)
SimplicialComplex A
A := Closure(S) */

Mesh K1
Mesh K2
Vertex i
InVS(i, K1)
Vertex j
InVS(j, K2)

MeshSubset S
Subset(S, K1)
S := Star(i)

Mesh A
A := Closure(S)

AutoLabel All

------------------------

/*
-- TODO: how to distinguish between two kinds of "in"?

-- from expansion of SimplicialComplex K1
-- what quantifier goes in front of an expansion?
Vertex K1v0, K1v1, K1v2, ..., K1vN in K1
Edge K1e0, K1e1, K1e2, ..., K1eN in K1
Face K1f0, K1f1, K1f2, ..., K1fN in K1

-- from expansion of SimplicialComplex K2
Vertex K2v0, K2v1, K2v2, ..., K2vN in K2
Edge K2e0, K2e1, K2e2, ..., K2eN in K2
Face K2f0, K2f1, K2f2, ..., K2fN in K2
-- TODO add connectivity info
K2v0 in K2e0
K2v1 in K2e0
... in K2f0
...

-- from expansion of Star(i)
K1v3, K1v5, K1v11, ..., K1v13 in S
K1e2, K1e7, K1e9, ..., K1e14 in S
K1f1, K1f2, K1f3, ..., K1f4 in S

-- from expansion of Closure(S)
Kv6, ..., Kv8 in A
Ke7, ..., Ke9 in A
Kf8, ..., Kf9 in A
*/
